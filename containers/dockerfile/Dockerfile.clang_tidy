ARG CUDA_VERSION=notset
FROM nvidia/cuda:$CUDA_VERSION-devel-ubuntu22.04
ARG CUDA_VERSION

ENV DEBIAN_FRONTEND=noninteractive
ENV GOSU_VERSION=1.10

RUN \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/3bf863cc.pub && \
    apt-get update && \
    apt-get install -y wget git python3 python3-pip software-properties-common \
                       apt-transport-https ca-certificates gnupg-agent && \
    apt-get install -y ninja-build libgtest-dev libgmock-dev

# Install clang-tidy: https://apt.llvm.org/
RUN \
    apt-add-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main" && \
    wget -O llvm-snapshot.gpg.key https://apt.llvm.org/llvm-snapshot.gpg.key && \
    apt-key add ./llvm-snapshot.gpg.key && \
    rm llvm-snapshot.gpg.key && \
    apt-get update && \
    apt-get install -y clang-tidy-19 clang-19 libomp-19-dev

# Set default clang-tidy version
RUN update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-19 100 && \
    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-19 100

# Install Python packages
RUN pip3 install cmake

# Install lightweight sudo (not bound to TTY)
RUN set -ex; \
    wget -nv -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64" && \
    chmod +x /usr/local/bin/gosu && \
    gosu nobody true

# Default entry-point to use if running locally
# It will preserve attributes of created files
COPY entrypoint.sh /scripts/

WORKDIR /workspace
ENTRYPOINT ["/scripts/entrypoint.sh"]
